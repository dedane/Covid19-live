{"remainingRequest":"/home/makashima/Documents/code/covid/node_modules/babel-loader/lib/index.js!/home/makashima/Documents/code/covid/src/store/modules/countries.js","dependencies":[{"path":"/home/makashima/Documents/code/covid/src/store/modules/countries.js","mtime":1590185360333},{"path":"/home/makashima/Documents/code/covid/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/makashima/Documents/code/covid/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIHN0YXRlID0gewogIGNvdW50cnlTdGF0OiBudWxsLAogIGxvYWRlZDogZmFsc2UKfTsKdmFyIGdldHRlcnMgPSB7CiAgY291bnRyeVN0YXQ6IGZ1bmN0aW9uIGNvdW50cnlTdGF0KHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuY291bnRyeVN0YXQ7CiAgfSwKICBsb2FkZWQ6IGZ1bmN0aW9uIGxvYWRlZChzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmxvYWRlZDsKICB9Cn07CnZhciBtdXRhdGlvbnMgPSB7CiAgc2V0Q291bnRyeVN0YXQ6IGZ1bmN0aW9uIHNldENvdW50cnlTdGF0KHN0YXRlLCBwYXlsb2FkKSB7CiAgICBzdGF0ZS5jb3VudHJ5U3RhdCA9IHBheWxvYWQ7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBnZXRDb3VudHJ5U3RhdDogZnVuY3Rpb24gZ2V0Q291bnRyeVN0YXQodnVleENvbnRleHQsIGNvdW50cnlOYW1lKSB7CiAgICBheGlvcyh7CiAgICAgICJtZXRob2QiOiAiR0VUIiwKICAgICAgInVybCI6ICJodHRwczovL2NvdmlkLTE5My5wLnJhcGlkYXBpLmNvbS9jb3VudHJpZXMiLAogICAgICAiaGVhZGVycyI6IHsKICAgICAgICAieC1yYXBpZGFwaS1ob3N0IjogImNvdmlkLTE5My5wLnJhcGlkYXBpLmNvbSIsCiAgICAgICAgIngtcmFwaWRhcGkta2V5IjogIjEwODc5MWFmYmRtc2hkZTIwYzJhMTIwNDUxNDZwMTE0Yjc2anNuZjk2NWFjZDEwYmQ5IiwKICAgICAgICAidXNlUXVlcnlTdHJpbmciOiB0cnVlCiAgICAgIH0sCiAgICAgICJwYXJhbXMiOiB7CiAgICAgICAgImNvdW50cnkiOiBjb3VudHJ5TmFtZQogICAgICB9CiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICB2dWV4Y29udGV4dC5jb21taXQoJ3NldENvdW50cnlTdGF0JywgcmVzcG9uc2UuZGF0YS5sYXRlc3Rfc3RhdF9ieV9jb3VudHJ5WzBdKTsKICAgIH0pOwogIH0sCiAgcmVtb3ZlU3RhdDogZnVuY3Rpb24gcmVtb3ZlU3RhdCh2dWV4Q29udGV4dCkgewogICAgdnVleENvbnRleHQuc3RhdGUuY291bnRyeVN0YXQgPSBudWxsOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHN0YXRlLAogIGdldHRlcnM6IGdldHRlcnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMsCiAgYWN0aW9uczogYWN0aW9ucwp9Ow=="},{"version":3,"sources":["/home/makashima/Documents/code/covid/src/store/modules/countries.js"],"names":["axios","state","countryStat","loaded","getters","mutations","setCountryStat","payload","actions","getCountryStat","vuexContext","countryName","then","response","vuexcontext","commit","data","latest_stat_by_country","removeStat","namespaced"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,KAAK,GAAC;AACRC,EAAAA,WAAW,EAAE,IADL;AAERC,EAAAA,MAAM,EAAE;AAFA,CAAZ;AAKA,IAAMC,OAAO,GAAC;AACVF,EAAAA,WAAW,EAAE,qBAAAD,KAAK;AAAA,WAAIA,KAAK,CAACC,WAAV;AAAA,GADR;AAEVC,EAAAA,MAAM,EAAE,gBAAAF,KAAK;AAAA,WAAIA,KAAK,CAACE,MAAV;AAAA;AAFH,CAAd;AAIA,IAAME,SAAS,GAAC;AACZC,EAAAA,cADY,0BACGL,KADH,EACUM,OADV,EACkB;AAC1BN,IAAAA,KAAK,CAACC,WAAN,GAAoBK,OAApB;AACH;AAHW,CAAhB;AAKA,IAAMC,OAAO,GAAC;AACVC,EAAAA,cADU,0BACKC,WADL,EACkBC,WADlB,EAC8B;AACpCX,IAAAA,KAAK,CAAC;AACF,gBAAS,KADP;AAEF,aAAO,4CAFL;AAGF,iBAAU;AACN,2BAAkB,0BADZ;AAEN,0BAAiB,oDAFX;AAGN,0BAAkB;AAHZ,OAHR;AAOA,gBAAS;AACP,mBAAWW;AADJ;AAPT,KAAD,CAAL,CAWCC,IAXD,CAWM,UAAAC,QAAQ,EAAI;AACdC,MAAAA,WAAW,CAACC,MAAZ,CAAmB,gBAAnB,EAAoCF,QAAQ,CAACG,IAAT,CAAcC,sBAAd,CAAqC,CAArC,CAApC;AACH,KAbD;AAcH,GAhBS;AAiBVC,EAAAA,UAjBU,sBAiBCR,WAjBD,EAiBa;AACnBA,IAAAA,WAAW,CAACT,KAAZ,CAAkBC,WAAlB,GAAgC,IAAhC;AACH;AAnBS,CAAd;AAsBA,eAAc;AACViB,EAAAA,UAAU,EAAE,IADF;AAEVlB,EAAAA,KAAK,EAALA,KAFU;AAEHG,EAAAA,OAAO,EAAPA,OAFG;AAEMC,EAAAA,SAAS,EAATA,SAFN;AAEiBG,EAAAA,OAAO,EAAPA;AAFjB,CAAd","sourcesContent":["import axios from 'axios'\n\nconst state={\n    countryStat: null,\n    loaded: false,\n}\n\nconst getters={\n    countryStat: state => state.countryStat,\n    loaded: state => state.loaded,\n}\nconst mutations={\n    setCountryStat(state, payload){\n        state.countryStat = payload\n    },\n}\nconst actions={\n    getCountryStat(vuexContext, countryName){\n        axios({\n            \"method\":\"GET\",\n            \"url\": \"https://covid-193.p.rapidapi.com/countries\",\n            \"headers\":{\n                \"x-rapidapi-host\":\"covid-193.p.rapidapi.com\",\n                \"x-rapidapi-key\":\"108791afbdmshde20c2a12045146p114b76jsnf965acd10bd9\",\n                \"useQueryString\": true\n            },\"params\":{\n                \"country\": countryName\n            }\n        })\n        .then(response => {\n            vuexcontext.commit('setCountryStat',response.data.latest_stat_by_country[0])\n        })\n    },\n    removeStat(vuexContext){\n        vuexContext.state.countryStat = null\n    }\n}\n\nexport default{\n    namespaced: true,\n    state, getters, mutations, actions\n}"]}]}